<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="jelly:regexp" elementFormDefault="qualified">
  <xsd:annotation>
    <xsd:documentation/>
  </xsd:annotation>
  <xsd:element name="contains">
    <xsd:annotation>
      <xsd:documentation>This tag checks whether a regexp contains a string.
        <authortag>&lt;a href="mailto:christian@inx-soft.com"&gt;Christian Amor Kvalheim&lt;/a&gt;</authortag>
        <versiontag>$Revision: 480471 $</versiontag>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="expr" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="text" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="scope" use="optional">
        <xsd:annotation>
          <xsd:documentation>Sets the variable scope for this variable. For example setting this value to 'parent' willset this value in the parent scope. When Jelly is run from inside a Servlet environmentthen other scopes will be available such as 'request', 'session' or 'application'.Other applications may implement their own custom scopes.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="tagLib" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="match">
    <xsd:annotation>
      <xsd:documentation>This tag checks whether a regexp matches a string.
        <authortag>&lt;a href="mailto:christian@inx-soft.com"&gt;Christian Amor Kvalheim&lt;/a&gt;</authortag>
        <versiontag>$Revision: 480471 $</versiontag>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="expr" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="text" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="var" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="scope" use="optional">
        <xsd:annotation>
          <xsd:documentation>Sets the variable scope for this variable. For example setting this value to 'parent' willset this value in the parent scope. When Jelly is run from inside a Servlet environmentthen other scopes will be available such as 'request', 'session' or 'application'.Other applications may implement their own custom scopes.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="trim" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="tagLib" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="escapeText" use="optional">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
